name: Deploy Live Preview to GitHub Pages

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: windows-latest

    steps:
      # Step 1: Checkout the code from master
      - name: Checkout code from master
        uses: actions/checkout@v3
        with:
          ref: master

      # Step 2: Fetch live_preview branch and forcefully reset to master
      - name: Force reset live_preview branch to master
        run: |
          git config --global user.email "khandelwalharshit431@gmail.com"
          git config --global user.name "Harshit2756"
          
          # Fetch the live_preview branch
          git fetch origin live_preview

          # Check out the live_preview branch
          git checkout live_preview

          # Reset live_preview to match master
          git reset --hard master

          # Force push the changes to live_preview, overwriting it
          git push --force https://$GITHUB_ACTOR:${{ secrets.PAT_TOKEN }}@github.com/Harshit2756/flutter_chess live_preview

      # Step 3: Set up Flutter environment (before running flutter commands)
      - name: Set up Flutter
        uses: subosito/flutter-action@v2
        with:
          flutter-version: "3.24.3"

      # Step 4: Add `device_preview` and `device_preview_screenshot` packages to pubspec.yaml
      - name: Add device_preview and device_preview_screenshot packages
        run: |
          flutter pub add device_preview
          flutter pub add device_preview_screenshot

      # Step 5: Replace main.dart with Device Preview code using PowerShell
      - name: Replace main.dart with Device Preview code
        run: |
          Set-Content lib/main.dart @"
          import 'package:chess/gameboard.dart';
          import 'package:chess/values/colors.dart';
          import 'package:device_preview/device_preview.dart';
          import 'package:device_preview_screenshot/device_preview_screenshot.dart';
          import 'package:flutter/material.dart;

          Future<void> main() async {
            runApp(
              DevicePreview(
                backgroundColor: backgroundColor,
                tools: const [
                  DeviceSection(
                    frameVisibility: false,
                    orientation: false,
                  ),
                  SystemSection(
                    locale: false,
                    theme: true,
                  ),
                  DevicePreviewScreenshot(),
                  SettingsSection(),
                ],
                devices: [
                  Devices.android.samsungGalaxyA50,
                  Devices.android.samsungGalaxyNote20,
                  Devices.android.samsungGalaxyS20,
                  Devices.android.samsungGalaxyNote20Ultra,
                  Devices.android.onePlus8Pro,
                  Devices.android.sonyXperia1II,
                  Devices.ios.iPhoneSE,
                  Devices.ios.iPhone12,
                  Devices.ios.iPhone12Mini,
                  Devices.ios.iPhone12ProMax,
                  Devices.ios.iPhone13,
                  Devices.ios.iPhone13ProMax,
                  Devices.ios.iPhone13Mini,
                  Devices.ios.iPhoneSE,
                ],
                enabled: true,
                builder: (context) => const MyApp(),
              ),
            );
          }

          class MyApp extends StatelessWidget {
            const MyApp({super.key});

            @override
            Widget build(BuildContext context) {
              return MaterialApp(
                title: 'Chess',
                debugShowCheckedModeBanner: false,
                locale: DevicePreview.locale(context),
                builder: DevicePreview.appBuilder,
                home: const GameBoard(),
              );
            }
          }
          "@

      # Step 6: Install Flutter dependencies
      - name: Install Flutter dependencies
        run: flutter pub get

      # Step 7: Build Flutter web app
      - name: Build Flutter for web
        run: flutter build web --release --web-renderer canvaskit

      # Step 8: Deploy to GitHub Pages using the docs folder
      - name: Deploy to GitHub Pages
        run: |
          Remove-Item -Recurse -Force docs
          mv build/web docs
          git add docs
          git commit -m "Deploy live preview build to GitHub Pages"
          git push https://$GITHUB_ACTOR:${{ secrets.PAT_TOKEN }}@github.com/Harshit2756/flutter_chess live_preview
